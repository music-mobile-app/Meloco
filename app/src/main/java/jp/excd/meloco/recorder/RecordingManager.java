//--------------------------------------------------------------------------------------------------
// クラス名：録音管理クラス
// 概要    ：録音機能を提供する。
//           シングルトンで動作する。
//--------------------------------------------------------------------------------------------------
package jp.excd.meloco.recorder;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;

import jp.excd.meloco.audio.engine.AudioController;
import jp.excd.meloco.constant.SoundSourceType;
import jp.excd.meloco.utility.WLog;

public class RecordingManager extends Thread{
    // 自分自身
    private static RecordingManager me = null;

    // 鳴らしているクリック音
    private ClickLoop clickLoop;

    //----------------------------------------------------------------------------------------------
    // コンストラクタ
    //----------------------------------------------------------------------------------------------
    private RecordingManager() {
    }
    //----------------------------------------------------------------------------------------------
    // 名称   ：インスタンス生成
    //----------------------------------------------------------------------------------------------
    public static synchronized RecordingManager getInstance() {
        if (me == null) {
            me = new RecordingManager();
        }
        return me;
    }
    //----------------------------------------------------------------------------------------------
    // 名称   ：レコーディング開始
    //----------------------------------------------------------------------------------------------
    public void startRec() {

        WLog.d(this, "startRec()");

        // クリック音を鳴らす。
        WLog.d(this, "startRec()_別スレッドで実行");
        me.start();
    }
    @Override
    public void run() {
        WLog.d(this, "クリック音を鳴らす");
        this.clickLoop = new ClickLoop();
        this.clickLoop.start();
    }
    //----------------------------------------------------------------------------------------------
    // 名称   ：レコーディング終了
    //----------------------------------------------------------------------------------------------
    public void stopRec() {

        WLog.d(this, "stopRec()");
        this.clickLoop.stop();
    }
    //----------------------------------------------------------------------------------------------
    // ■公開メソッド
    //----------------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------------
    // 名称   ：レコーディング開始
    //----------------------------------------------------------------------------------------------
    public static void startRecording() {
        RecordingManager.getInstance();
        me.startRec();
    }
    //----------------------------------------------------------------------------------------------
    // 名称   ：レコーディング停止
    //----------------------------------------------------------------------------------------------
    public static void stopRecording() {
        // TODO 実装する。
        me.stopRec();
    }
}
